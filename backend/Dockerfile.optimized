# Optimized Phase 1 Dockerfile - Reduced Size
FROM python:3.9-slim AS builder

# Install build dependencies in a separate stage
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set work directory
WORKDIR /app

# Copy and install Python dependencies
COPY requirements-phase1-minimal.txt .
RUN pip install --no-cache-dir --user -r requirements-phase1-minimal.txt

# Production stage - minimal runtime
FROM python:3.9-slim

# Set environment variables for Railway
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_APP=app_supabase.py \
    FLASK_ENV=production \
    PORT=8080 \
    PATH=/root/.local/bin:$PATH

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy Python packages from builder stage
COPY --from=builder /root/.local /root/.local

# Set work directory
WORKDIR /app

# Copy only essential application files
COPY app_supabase.py .
COPY start.sh .
COPY api/ ./api/
COPY services/ ./services/
COPY models/ ./models/

# Create necessary directories
RUN mkdir -p uploads processed logs

# Make start script executable
RUN chmod +x start.sh

# Health check for Railway
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Expose port
EXPOSE $PORT

# Start the application
CMD ["sh", "start.sh"]
