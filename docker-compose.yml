version: '3.8'

services:
  # Flask Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_profanity_backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SUPABASE_DB_URL=${SUPABASE_DB_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/processed:/app/processed
      - ./backend/models:/app/models
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for Celery (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: ai_profanity_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Celery Worker (optional - for background processing)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_profanity_worker
    command: celery -A celery_app worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - SUPABASE_DB_URL=${SUPABASE_DB_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/processed:/app/processed
      - ./backend/models:/app/models
    depends_on:
      - redis
      - backend
    restart: unless-stopped
    profiles:
      - full  # Only start with --profile full

  # Flower for Celery monitoring (optional)
  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai_profanity_flower
    command: celery -A celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - monitoring  # Only start with --profile monitoring

volumes:
  redis_data:

networks:
  default:
    name: ai_profanity_network
